<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop  
          http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
 
    <!-- Bean definitions go here
    ids are really just aliases or can think of them as a key    -->
    
    <bean id="userIO" class="com.mycompany.dvdlibrary.ui.UserIOConsoleImpl"/>

    <!-- construtor-arg tag has one ref attribute refers to another bean that has been previously defined -->
    <bean id="view" class="com.mycompany.dvdlibrary.ui.DVDLibraryView">
        <constructor-arg ref="userIO"/>
    </bean>
   
    <bean id="dvdLibraryDao" 
          class="com.mycompany.dvdlibrary.dao.DVDLibraryLambdaDaoFileImpl"/>
    
    <!--    <bean id="dvdDao" 
    class="com.mycompany.dvdlibrary.dao.ClassRosterAuditDaoFileImpl"/> -->
   
    <!--    <bean id="serviceLayer" 
     class="com.mycompany.dvdlibrary.service.ClassRosterServiceLayerImpl">
    <constructor-arg ref="DVDLibraryDao"/> -->
   
    <bean id="controller" 
          class="com.mycompany.dvdlibrary.controller.DVDLibraryController">
        <constructor-arg ref="dvdLibraryDao"/>
        <constructor-arg ref="view"/>
    </bean>
   
</beans>